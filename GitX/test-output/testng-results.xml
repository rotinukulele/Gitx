<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="5" total="13" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Loan" duration-ms="108" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
    <groups>
      <group name="Smoke">
        <method signature="First.Hello()[pri:0, instance:test.First@57e1b0c]" name="Hello" class="test.First"/>
        <method signature="Second.Good()[pri:0, instance:test.Second@7a1ebcd8]" name="Good" class="test.Second"/>
        <method signature="Third.laptopLoan()[pri:0, instance:test.Third@687080dc]" name="laptopLoan" class="test.Third"/>
        <method signature="Fourth.laptopLoginCarLoan()[pri:0, instance:test.Fourth@6043cd28]" name="laptopLoginCarLoan" class="test.Fourth"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="Personal Loan" duration-ms="45" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
      <class name="test.Second">
        <test-method status="PASS" signature="GoodEvening()[pri:0, instance:test.Second@7a1ebcd8]" name="GoodEvening" is-config="true" duration-ms="0" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoodEvening -->
        <test-method status="PASS" signature="Good()[pri:0, instance:test.Second@7a1ebcd8]" name="Good" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Good -->
        <test-method status="PASS" signature="SetUp(java.lang.String)[pri:0, instance:test.Second@7a1ebcd8]" name="SetUp" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[PersonalLoan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
      </class> <!-- test.Second -->
      <class name="test.First">
        <test-method status="PASS" signature="Hello()[pri:0, instance:test.First@57e1b0c]" name="Hello" duration-ms="4" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Hello -->
        <test-method status="PASS" signature="setUp(java.lang.String)[pri:0, instance:test.First@57e1b0c]" name="setUp" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.google.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="Bye()[pri:0, instance:test.First@57e1b0c]" name="Bye" is-config="true" duration-ms="0" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bye -->
      </class> <!-- test.First -->
    </test> <!-- Personal Loan -->
    <test name="Home Loan" duration-ms="4" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
      <class name="test.Third">
        <test-method status="PASS" signature="laptopLoan()[pri:0, instance:test.Third@687080dc]" name="laptopLoan" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- laptopLoan -->
      </class> <!-- test.Third -->
    </test> <!-- Home Loan -->
    <test name="Car Loan" duration-ms="21" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
      <class name="test.Fourth">
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:test.Fourth@6043cd28]" name="beforemethod" is-config="true" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="failTestCase()[pri:0, instance:test.Fourth@6043cd28]" name="failTestCase" duration-ms="2" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Fourth.failTestCase(Fourth.java:40)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTestCase -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:test.Fourth@6043cd28]" name="aftermethod" is-config="true" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="laptopLoginCarLoan()[pri:0, instance:test.Fourth@6043cd28]" name="laptopLoginCarLoan" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- laptopLoginCarLoan -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:test.Fourth@6043cd28]" name="beforemethod" is-config="true" duration-ms="0" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:test.Fourth@6043cd28]" name="aftermethod" is-config="true" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:test.Fourth@6043cd28]" name="beforemethod" is-config="true" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="mobileLoginCarLoan()[pri:0, instance:test.Fourth@6043cd28]" name="mobileLoginCarLoan" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method status="PASS" signature="aftermethod()[pri:0, instance:test.Fourth@6043cd28]" name="aftermethod" is-config="true" duration-ms="0" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- test.Fourth -->
      <class name="test.Second">
        <test-method status="PASS" signature="first()[pri:0, instance:test.Second@7a1ebcd8]" name="first" is-config="true" duration-ms="6" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- first -->
      </class> <!-- test.Second -->
      <class name="test.First">
        <test-method status="PASS" signature="last()[pri:0, instance:test.First@57e1b0c]" name="last" is-config="true" duration-ms="1" started-at="2021-10-27T13:37:02 IST" finished-at="2021-10-27T13:37:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- last -->
      </class> <!-- test.First -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan -->
</testng-results>
